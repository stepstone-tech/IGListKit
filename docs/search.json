{"Functions.html#/c:@F@IGListDiff":{"name":"IGSTListDiff","abstract":"<p>Creates a diff using indexes between two collections.</p>"},"Functions.html#/c:@F@IGSTListDiffPaths":{"name":"IGListDiffPaths","abstract":"<p>Creates a diff using index paths between two collections.</p>"},"Functions.html#/c:IGSTListExperiments.h@F@IGSTListExperimentEnabled":{"name":"IGListExperimentEnabled","abstract":"<p>Check if an experiment is enabled in a bitmask.</p>"},"Functions.html#/c:@F@IGSTListDiffExperiment":{"name":"IGListDiffExperiment","abstract":"<p>Performs an index diff with an experiment bitmask.</p>"},"Functions.html#/c:@F@IGSTListDiffPathsExperiment":{"name":"IGListDiffPathsExperiment","abstract":"<p>Performs a index path diff with an experiment bitmask.</p>"},"Type Definitions.html#/c:IGSTListAdapter.h@T@IGSTListUpdaterCompletion":{"name":"IGListUpdaterCompletion","abstract":"<p>A block to execute when the list updates are completed.</p>"},"Type Definitions.html#/c:IGSTListSingleSectionController.h@T@IGSTListSingleSectionCellConfigureBlock":{"name":"IGListSingleSectionCellConfigureBlock","abstract":"<p>A block used to configure cells.</p>"},"Type Definitions.html#/c:IGSTListSingleSectionController.h@T@IGSTListSingleSectionCellSizeBlock":{"name":"IGListSingleSectionCellSizeBlock","abstract":"<p>A block that returns the size for the cell given the collection context.</p>"},"Type Definitions.html#/c:IGSTListUpdatingDelegate.h@T@IGSTListUpdatingCompletion":{"name":"IGListUpdatingCompletion","abstract":"<p>A completion block to execute when updates are finished.</p>"},"Type Definitions.html#/c:IGSTListUpdatingDelegate.h@T@IGSTListObjectTransitionBlock":{"name":"IGListObjectTransitionBlock","abstract":"<p>A block to be called when the adapter applies changes to the collection view.</p>"},"Type Definitions.html#/c:IGSTListUpdatingDelegate.h@T@IGSTListItemUpdateBlock":{"name":"IGSTListItemUpdateBlock","abstract":"<p>A block that contains all of the updates.</p>"},"Type Definitions.html#/c:IGSTListUpdatingDelegate.h@T@IGSTListReloadUpdateBlock":{"name":"IGListReloadUpdateBlock","abstract":"<p>A block to be called when an adapter reloads the collection view.</p>"},"Protocols/IGSTListWorkingRangeDelegate.html#/c:objc(pl)IGSTListWorkingRangeDelegate(im)listAdapter:sectionControllerWillEnterWorkingRange:":{"name":"-listAdapter:sectionControllerWillEnterWorkingRange:","abstract":"<p>Notifies the delegate that an section controller will enter the working range.</p>","parent_name":"IGListWorkingRangeDelegate"},"Protocols/IGSTListWorkingRangeDelegate.html#/c:objc(pl)IGSTListWorkingRangeDelegate(im)listAdapter:sectionControllerDidExitWorkingRange:":{"name":"-listAdapter:sectionControllerDidExitWorkingRange:","abstract":"<p>Notifies the delegate that an section controller exited the working range.</p>","parent_name":"IGListWorkingRangeDelegate"},"Protocols/IGSTListUpdatingDelegate.html#/c:objc(pl)IGSTListUpdatingDelegate(im)objectLookupPointerFunctions":{"name":"-objectLookupPointerFunctions","abstract":"<p>Asks the delegate for the pointer functions for looking up an object in a collection.</p>","parent_name":"IGListUpdatingDelegate"},"Protocols/IGSTListUpdatingDelegate.html#/c:objc(pl)IGSTListUpdatingDelegate(im)performUpdateWithCollectionView:fromObjects:toObjects:animated:objectTransitionBlock:completion:":{"name":"-performUpdateWithCollectionView:fromObjects:toObjects:animated:objectTransitionBlock:completion:","abstract":"<p>Tells the delegate to perform a section transition from an old array of objects to a new one.</p>","parent_name":"IGListUpdatingDelegate"},"Protocols/IGSTListUpdatingDelegate.html#/c:objc(pl)IGSTListUpdatingDelegate(im)insertItemsIntoCollectionView:indexPaths:":{"name":"-insertItemsIntoCollectionView:indexPaths:","abstract":"<p>Tells the delegate to perform item inserts at the given index paths.</p>","parent_name":"IGListUpdatingDelegate"},"Protocols/IGSTListUpdatingDelegate.html#/c:objc(pl)IGSTListUpdatingDelegate(im)deleteItemsFromCollectionView:indexPaths:":{"name":"-deleteItemsFromCollectionView:indexPaths:","abstract":"<p>Tells the delegate to perform item deletes at the given index paths.</p>","parent_name":"IGListUpdatingDelegate"},"Protocols/IGSTListUpdatingDelegate.html#/c:objc(pl)IGSTListUpdatingDelegate(im)moveItemInCollectionView:fromIndexPath:toIndexPath:":{"name":"-moveItemInCollectionView:fromIndexPath:toIndexPath:","abstract":"<p>Tells the delegate to move an item from and to given index paths.</p>","parent_name":"IGListUpdatingDelegate"},"Protocols/IGSTListUpdatingDelegate.html#/c:objc(pl)IGSTListUpdatingDelegate(im)reloadItemInCollectionView:fromIndexPath:toIndexPath:":{"name":"-reloadItemInCollectionView:fromIndexPath:toIndexPath:","abstract":"<p>Tells the delegate to reload an item from and to given index paths.</p>","parent_name":"IGListUpdatingDelegate"},"Protocols/IGSTListUpdatingDelegate.html#/c:objc(pl)IGSTListUpdatingDelegate(im)reloadDataWithCollectionView:reloadUpdateBlock:completion:":{"name":"-reloadDataWithCollectionView:reloadUpdateBlock:completion:","abstract":"<p>Completely reload data in the collection.</p>","parent_name":"IGListUpdatingDelegate"},"Protocols/IGSTListUpdatingDelegate.html#/c:objc(pl)IGSTListUpdatingDelegate(im)reloadCollectionView:sections:":{"name":"-reloadCollectionView:sections:","abstract":"<p>Completely reload each section in the collection view.</p>","parent_name":"IGListUpdatingDelegate"},"Protocols/IGSTListUpdatingDelegate.html#/c:objc(pl)IGSTListUpdatingDelegate(im)performUpdateWithCollectionView:animated:itemUpdates:completion:":{"name":"-performUpdateWithCollectionView:animated:itemUpdates:completion:","abstract":"<p>Perform an item update block in the collection view.</p>","parent_name":"IGListUpdatingDelegate"},"Protocols/IGSTListSupplementaryViewSource.html#/c:objc(pl)IGSTListSupplementaryViewSource(im)supportedElementKinds":{"name":"-supportedElementKinds","abstract":"<p>Asks the SupplementaryViewSource for an array of supported element kinds.</p>","parent_name":"IGListSupplementaryViewSource"},"Protocols/IGSTListSupplementaryViewSource.html#/c:objc(pl)IGSTListSupplementaryViewSource(im)viewForSupplementaryElementOfKind:atIndex:":{"name":"-viewForSupplementaryElementOfKind:atIndex:","abstract":"<p>Asks the SupplementaryViewSource for a configured supplementary view for the specified kind and index.</p>","parent_name":"IGListSupplementaryViewSource"},"Protocols/IGSTListSupplementaryViewSource.html#/c:objc(pl)IGSTListSupplementaryViewSource(im)sizeForSupplementaryViewOfKind:atIndex:":{"name":"-sizeForSupplementaryViewOfKind:atIndex:","abstract":"<p>Asks the SupplementaryViewSource for the size of a supplementary view for the given kind and index path.</p>","parent_name":"IGListSupplementaryViewSource"},"Protocols/IGSTListSingleSectionControllerDelegate.html#/c:objc(pl)IGSTListSingleSectionControllerDelegate(im)didSelectSectionController:withObject:":{"name":"-didSelectSectionController:withObject:","abstract":"<p>Tells the delegate that the section controller was selected.</p>","parent_name":"IGListSingleSectionControllerDelegate"},"Protocols/IGSTListScrollDelegate.html#/c:objc(pl)IGSTListScrollDelegate(im)listAdapter:didScrollSectionController:":{"name":"-listAdapter:didScrollSectionController:","abstract":"<p>Tells the delegate that the section controller was scrolled on screen.</p>","parent_name":"IGListScrollDelegate"},"Protocols/IGSTListScrollDelegate.html#/c:objc(pl)IGSTListScrollDelegate(im)listAdapter:willBeginDraggingSectionController:":{"name":"-listAdapter:willBeginDraggingSectionController:","abstract":"<p>Tells the delegate that the section controller will be dragged on screen.</p>","parent_name":"IGListScrollDelegate"},"Protocols/IGSTListScrollDelegate.html#/c:objc(pl)IGSTListScrollDelegate(im)listAdapter:didEndDraggingSectionController:willDecelerate:":{"name":"-listAdapter:didEndDraggingSectionController:willDecelerate:","abstract":"<p>Tells the delegate that the section controller did end dragging on screen.</p>","parent_name":"IGListScrollDelegate"},"Protocols/IGSTListScrollDelegate.html#/c:objc(pl)IGSTListScrollDelegate(im)listAdapter:didEndDeceleratingSectionController:":{"name":"-listAdapter:didEndDeceleratingSectionController:","abstract":"<p>Undocumented</p>","parent_name":"IGListScrollDelegate"},"Protocols/IGSTListDisplayDelegate.html#/c:objc(pl)IGSTListDisplayDelegate(im)listAdapter:willDisplaySectionController:":{"name":"-listAdapter:willDisplaySectionController:","abstract":"<p>Tells the delegate that the specified section controller is about to be displayed.</p>","parent_name":"IGListDisplayDelegate"},"Protocols/IGSTListDisplayDelegate.html#/c:objc(pl)IGSTListDisplayDelegate(im)listAdapter:didEndDisplayingSectionController:":{"name":"-listAdapter:didEndDisplayingSectionController:","abstract":"<p>Tells the delegate that the specified section controller is no longer being displayed.</p>","parent_name":"IGListDisplayDelegate"},"Protocols/IGSTListDisplayDelegate.html#/c:objc(pl)IGSTListDisplayDelegate(im)listAdapter:willDisplaySectionController:cell:atIndex:":{"name":"-listAdapter:willDisplaySectionController:cell:atIndex:","abstract":"<p>Tells the delegate that a cell in the specified list is about to be displayed.</p>","parent_name":"IGListDisplayDelegate"},"Protocols/IGSTListDisplayDelegate.html#/c:objc(pl)IGSTListDisplayDelegate(im)listAdapter:didEndDisplayingSectionController:cell:atIndex:":{"name":"-listAdapter:didEndDisplayingSectionController:cell:atIndex:","abstract":"<p>Tells the delegate that a cell in the specified list is no longer being displayed.</p>","parent_name":"IGListDisplayDelegate"},"Protocols/IGSTListDiffable.html#/c:objc(pl)IGSTListDiffable(im)diffIdentifier":{"name":"-diffIdentifier","abstract":"<p>Returns a key that uniquely identifies the object.</p>","parent_name":"IGListDiffable"},"Protocols/IGSTListDiffable.html#/c:objc(pl)IGSTListDiffable(im)isEqualToDiffableObject:":{"name":"-isEqualToDiffableObject:","abstract":"<p>Returns whether the receiver and a given object are equal.</p>","parent_name":"IGListDiffable"},"Protocols/IGSTListCollectionContext.html#/c:objc(pl)IGSTListCollectionContext(py)containerSize":{"name":"containerSize","abstract":"<p>The size of the collection view. You can use this for sizing cells.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGSTListCollectionContext.html#/c:objc(pl)IGSTListCollectionContext(py)containerInset":{"name":"containerInset","abstract":"<p>The content insets of the collection view. You can use this for sizing cells.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGSTListCollectionContext.html#/c:objc(pl)IGSTListCollectionContext(py)insetContainerSize":{"name":"insetContainerSize","abstract":"<p>The size of the collection view with content insets applied.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGSTListCollectionContext.html#/c:objc(pl)IGSTListCollectionContext(im)containerSizeForSectionController:":{"name":"-containerSizeForSectionController:","abstract":"<p>Returns size of the collection view relative to the section controller.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGSTListCollectionContext.html#/c:objc(pl)IGSTListCollectionContext(im)indexForCell:sectionController:":{"name":"-indexForCell:sectionController:","abstract":"<p>Returns the index of the specified cell in the collection relative to the section controller.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGSTListCollectionContext.html#/c:objc(pl)IGSTListCollectionContext(im)cellForItemAtIndex:sectionController:":{"name":"-cellForItemAtIndex:sectionController:","abstract":"<p>Returns the cell in the collection at the specified index for the section controller.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGSTListCollectionContext.html#/c:objc(pl)IGSTListCollectionContext(im)visibleCellsForSectionController:":{"name":"-visibleCellsForSectionController:","abstract":"<p>Returns the visible cells for the given section controller.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGSTListCollectionContext.html#/c:objc(pl)IGSTListCollectionContext(im)visibleIndexPathsForSectionController:":{"name":"-visibleIndexPathsForSectionController:","abstract":"<p>Returns the visible paths for the given section controller.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGSTListCollectionContext.html#/c:objc(pl)IGSTListCollectionContext(im)deselectItemAtIndex:sectionController:animated:":{"name":"-deselectItemAtIndex:sectionController:animated:","abstract":"<p>Deselects a cell in the collection.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGSTListCollectionContext.html#/c:objc(pl)IGSTListCollectionContext(im)selectItemAtIndex:sectionController:animated:scrollPosition:":{"name":"-selectItemAtIndex:sectionController:animated:scrollPosition:","abstract":"<p>Selects a cell in the collection.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGSTListCollectionContext.html#/c:objc(pl)IGSTListCollectionContext(im)dequeueReusableCellOfClass:forSectionController:atIndex:":{"name":"-dequeueReusableCellOfClass:forSectionController:atIndex:","abstract":"<p>Dequeues a cell from the collection view reuse pool.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGSTListCollectionContext.html#/c:objc(pl)IGSTListCollectionContext(im)dequeueReusableCellWithNibName:bundle:forSectionController:atIndex:":{"name":"-dequeueReusableCellWithNibName:bundle:forSectionController:atIndex:","abstract":"<p>Dequeues a cell from the collection view reuse pool.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGSTListCollectionContext.html#/c:objc(pl)IGSTListCollectionContext(im)dequeueReusableCellFromStoryboardWithIdentifier:forSectionController:atIndex:":{"name":"-dequeueReusableCellFromStoryboardWithIdentifier:forSectionController:atIndex:","abstract":"<p>Dequeues a storyboard prototype cell from the collection view reuse pool.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGSTListCollectionContext.html#/c:objc(pl)IGSTListCollectionContext(im)dequeueReusableSupplementaryViewOfKind:forSectionController:class:atIndex:":{"name":"-dequeueReusableSupplementaryViewOfKind:forSectionController:class:atIndex:","abstract":"<p>Dequeues a supplementary view from the collection view reuse pool.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGSTListCollectionContext.html#/c:objc(pl)IGSTListCollectionContext(im)dequeueReusableSupplementaryViewFromStoryboardOfKind:withIdentifier:forSectionController:atIndex:":{"name":"-dequeueReusableSupplementaryViewFromStoryboardOfKind:withIdentifier:forSectionController:atIndex:","abstract":"<p>Dequeues a supplementary view from the collection view reuse pool.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGSTListCollectionContext.html#/c:objc(pl)IGSTListCollectionContext(im)dequeueReusableSupplementaryViewOfKind:forSectionController:nibName:bundle:atIndex:":{"name":"-dequeueReusableSupplementaryViewOfKind:forSectionController:nibName:bundle:atIndex:","abstract":"<p>Dequeues a supplementary view from the collection view reuse pool.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGSTListCollectionContext.html#/c:objc(pl)IGSTListCollectionContext(im)invalidateLayoutForSectionController:completion:":{"name":"-invalidateLayoutForSectionController:completion:","abstract":"<p>Invalidate the backing <code>UICollectionViewLayout</code> for all items in the section controller.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGSTListCollectionContext.html#/c:objc(pl)IGSTListCollectionContext(im)performBatchAnimated:updates:completion:":{"name":"-performBatchAnimated:updates:completion:","abstract":"<p>Batches and performs many cell-level updates in a single transaction.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGSTListCollectionContext.html#/c:objc(pl)IGSTListCollectionContext(im)scrollToSectionController:atIndex:scrollPosition:animated:":{"name":"-scrollToSectionController:atIndex:scrollPosition:animated:","abstract":"<p>Scrolls to the specified section controller in the list.</p>","parent_name":"IGListCollectionContext"},"Protocols/IGSTListBindingSectionControllerSelectionDelegate.html#/c:objc(pl)IGSTListBindingSectionControllerSelectionDelegate(im)sectionController:didSelectItemAtIndex:viewModel:":{"name":"-sectionController:didSelectItemAtIndex:viewModel:","abstract":"<p>Tells the delegate that a cell at a given index was selected.</p>","parent_name":"IGListBindingSectionControllerSelectionDelegate"},"Protocols/IGSTListBindingSectionControllerSelectionDelegate.html#/c:objc(pl)IGSTListBindingSectionControllerSelectionDelegate(im)sectionController:didDeselectItemAtIndex:viewModel:":{"name":"-sectionController:didDeselectItemAtIndex:viewModel:","abstract":"<p>Undocumented</p>","parent_name":"IGListBindingSectionControllerSelectionDelegate"},"Protocols/IGSTListBindingSectionControllerDataSource.html#/c:objc(pl)IGSTListBindingSectionControllerDataSource(im)sectionController:viewModelsForObject:":{"name":"-sectionController:viewModelsForObject:","abstract":"<p>Create an array of view models given a top-level object.</p>","parent_name":"IGListBindingSectionControllerDataSource"},"Protocols/IGSTListBindingSectionControllerDataSource.html#/c:objc(pl)IGSTListBindingSectionControllerDataSource(im)sectionController:cellForViewModel:atIndex:":{"name":"-sectionController:cellForViewModel:atIndex:","abstract":"<p>Return a dequeued cell for a given view model.</p>","parent_name":"IGListBindingSectionControllerDataSource"},"Protocols/IGSTListBindingSectionControllerDataSource.html#/c:objc(pl)IGSTListBindingSectionControllerDataSource(im)sectionController:sizeForViewModel:atIndex:":{"name":"-sectionController:sizeForViewModel:atIndex:","abstract":"<p>Return a cell size for a given view model.</p>","parent_name":"IGListBindingSectionControllerDataSource"},"Protocols/IGSTListBindable.html#/c:objc(pl)IGSTListBindable(im)bindViewModel:":{"name":"-bindViewModel:","abstract":"<p>Tells the cell to configure itself with the given view model.</p>","parent_name":"IGListBindable"},"Protocols/IGSTListBatchContext.html#/c:objc(pl)IGSTListBatchContext(im)reloadInSectionController:atIndexes:":{"name":"-reloadInSectionController:atIndexes:","abstract":"<p>Reloads cells in the section controller.</p>","parent_name":"IGListBatchContext"},"Protocols/IGSTListBatchContext.html#/c:objc(pl)IGSTListBatchContext(im)insertInSectionController:atIndexes:":{"name":"-insertInSectionController:atIndexes:","abstract":"<p>Inserts cells in the list.</p>","parent_name":"IGListBatchContext"},"Protocols/IGSTListBatchContext.html#/c:objc(pl)IGSTListBatchContext(im)deleteInSectionController:atIndexes:":{"name":"-deleteInSectionController:atIndexes:","abstract":"<p>Deletes cells in the list.</p>","parent_name":"IGListBatchContext"},"Protocols/IGSTListBatchContext.html#/c:objc(pl)IGSTListBatchContext(im)moveInSectionController:fromIndex:toIndex:":{"name":"-moveInSectionController:fromIndex:toIndex:","abstract":"<p>Moves a cell from one index to another within the section controller.</p>","parent_name":"IGListBatchContext"},"Protocols/IGSTListBatchContext.html#/c:objc(pl)IGSTListBatchContext(im)reloadSectionController:":{"name":"-reloadSectionController:","abstract":"<p>Reloads the entire section controller.</p>","parent_name":"IGListBatchContext"},"Protocols/IGSTListAdapterUpdaterDelegate.html#/c:objc(pl)IGSTListAdapterUpdaterDelegate(im)listAdapterUpdater:willPerformBatchUpdatesWithCollectionView:":{"name":"-listAdapterUpdater:willPerformBatchUpdatesWithCollectionView:","abstract":"<p>Notifies the delegate that the updater will call <code>-[UICollectionView performBatchUpdates:completion:]</code>.</p>","parent_name":"IGListAdapterUpdaterDelegate"},"Protocols/IGSTListAdapterUpdaterDelegate.html#/c:objc(pl)IGSTListAdapterUpdaterDelegate(im)listAdapterUpdater:didPerformBatchUpdates:collectionView:":{"name":"-listAdapterUpdater:didPerformBatchUpdates:collectionView:","abstract":"<p>Notifies the delegate that the updater successfully finished <code>-[UICollectionView performBatchUpdates:completion:]</code>.</p>","parent_name":"IGListAdapterUpdaterDelegate"},"Protocols/IGSTListAdapterUpdaterDelegate.html#/c:objc(pl)IGSTListAdapterUpdaterDelegate(im)listAdapterUpdater:willInsertIndexPaths:collectionView:":{"name":"-listAdapterUpdater:willInsertIndexPaths:collectionView:","abstract":"<p>Notifies the delegate that the updater will call <code>-[UICollectionView insertItemsAtIndexPaths:]</code>.</p>","parent_name":"IGListAdapterUpdaterDelegate"},"Protocols/IGSTListAdapterUpdaterDelegate.html#/c:objc(pl)IGSTListAdapterUpdaterDelegate(im)listAdapterUpdater:willDeleteIndexPaths:collectionView:":{"name":"-listAdapterUpdater:willDeleteIndexPaths:collectionView:","abstract":"<p>Notifies the delegate that the updater will call <code>-[UICollectionView deleteItemsAtIndexPaths:]</code>.</p>","parent_name":"IGListAdapterUpdaterDelegate"},"Protocols/IGSTListAdapterUpdaterDelegate.html#/c:objc(pl)IGSTListAdapterUpdaterDelegate(im)listAdapterUpdater:willMoveFromIndexPath:toIndexPath:collectionView:":{"name":"-listAdapterUpdater:willMoveFromIndexPath:toIndexPath:collectionView:","abstract":"<p>Notifies the delegate that the updater will call <code>-[UICollectionView moveItemAtIndexPath:toIndexPath:]</code></p>","parent_name":"IGListAdapterUpdaterDelegate"},"Protocols/IGSTListAdapterUpdaterDelegate.html#/c:objc(pl)IGSTListAdapterUpdaterDelegate(im)listAdapterUpdater:willReloadIndexPaths:collectionView:":{"name":"-listAdapterUpdater:willReloadIndexPaths:collectionView:","abstract":"<p>Notifies the delegate that the updater will call <code>-[UICollectionView reloadItemsAtIndexPaths:]</code>.</p>","parent_name":"IGListAdapterUpdaterDelegate"},"Protocols/IGSTListAdapterUpdaterDelegate.html#/c:objc(pl)IGSTListAdapterUpdaterDelegate(im)listAdapterUpdater:willReloadSections:collectionView:":{"name":"-listAdapterUpdater:willReloadSections:collectionView:","abstract":"<p>Notifies the delegate that the updater will call <code>-[UICollectionView reloadSections:]</code>.</p>","parent_name":"IGListAdapterUpdaterDelegate"},"Protocols/IGSTListAdapterUpdaterDelegate.html#/c:objc(pl)IGSTListAdapterUpdaterDelegate(im)listAdapterUpdater:willReloadDataWithCollectionView:":{"name":"-listAdapterUpdater:willReloadDataWithCollectionView:","abstract":"<p>Notifies the delegate that the updater will call <code>-[UICollectionView reloadData]</code>.</p>","parent_name":"IGListAdapterUpdaterDelegate"},"Protocols/IGSTListAdapterUpdaterDelegate.html#/c:objc(pl)IGSTListAdapterUpdaterDelegate(im)listAdapterUpdater:didReloadDataWithCollectionView:":{"name":"-listAdapterUpdater:didReloadDataWithCollectionView:","abstract":"<p>Notifies the delegate that the updater successfully called <code>-[UICollectionView reloadData]</code>.</p>","parent_name":"IGListAdapterUpdaterDelegate"},"Protocols/IGSTListAdapterUpdaterDelegate.html#/c:objc(pl)IGSTListAdapterUpdaterDelegate(im)listAdapterUpdater:willCrashWithException:fromObjects:toObjects:updates:":{"name":"-listAdapterUpdater:willCrashWithException:fromObjects:toObjects:updates:","abstract":"<p>Notifies the delegate that the collection view threw an exception in <code>-[UICollectionView performBatchUpdates:completion:]</code>.</p>","parent_name":"IGListAdapterUpdaterDelegate"},"Protocols/IGSTListAdapterDelegate.html#/c:objc(pl)IGSTListAdapterDelegate(im)listAdapter:willDisplayObject:atIndex:":{"name":"-listAdapter:willDisplayObject:atIndex:","abstract":"<p>Notifies the delegate that a list object is about to be displayed.</p>","parent_name":"IGListAdapterDelegate"},"Protocols/IGSTListAdapterDelegate.html#/c:objc(pl)IGSTListAdapterDelegate(im)listAdapter:didEndDisplayingObject:atIndex:":{"name":"-listAdapter:didEndDisplayingObject:atIndex:","abstract":"<p>Notifies the delegate that a list object is no longer being displayed.</p>","parent_name":"IGListAdapterDelegate"},"Protocols/IGSTListAdapterDataSource.html#/c:objc(pl)IGSTListAdapterDataSource(im)objectsForListAdapter:":{"name":"-objectsForListAdapter:","abstract":"<p>Asks the data source for the objects to display in the list.</p>","parent_name":"IGListAdapterDataSource"},"Protocols/IGSTListAdapterDataSource.html#/c:objc(pl)IGSTListAdapterDataSource(im)listAdapter:sectionControllerForObject:":{"name":"-listAdapter:sectionControllerForObject:","abstract":"<p>Asks the data source for a section controller for the specified object in the list.</p>","parent_name":"IGListAdapterDataSource"},"Protocols/IGSTListAdapterDataSource.html#/c:objc(pl)IGSTListAdapterDataSource(im)emptyViewForListAdapter:":{"name":"-emptyViewForListAdapter:","abstract":"<p>Asks the data source for a view to use as the collection view background when the list is empty.</p>","parent_name":"IGListAdapterDataSource"},"Protocols/IGSTListAdapterDataSource.html":{"name":"IGListAdapterDataSource","abstract":"<p>Implement this protocol to provide data to an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/IGSTListAdapter.html\">IGSTListAdapter</a></code>.</p>"},"Protocols/IGSTListAdapterDelegate.html":{"name":"IGListAdapterDelegate","abstract":"<p>Conform to <code>IGSTListAdapterDelegate</code> to receive display events for objects in a list.</p>"},"Protocols/IGSTListAdapterUpdaterDelegate.html":{"name":"IGListAdapterUpdaterDelegate","abstract":"<p>A protocol that receives events about <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/IGSTListAdapterUpdater.html\">IGSTListAdapterUpdater</a></code> operations.</p>"},"Protocols/IGSTListBatchContext.html":{"name":"IGListBatchContext","abstract":"<p>Objects conforming to the IGSTListBatchContext protocol provide a way for section controllers to mutate their cells or"},"Protocols/IGSTListBindable.html":{"name":"IGListBindable","abstract":"<p>A protocol for cells that configure themselves given a view model.</p>"},"Protocols/IGSTListBindingSectionControllerDataSource.html":{"name":"IGListBindingSectionControllerDataSource","abstract":"<p>A protocol that returns data to power cells in an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/IGSTListBindingSectionController.html\">IGSTListBindingSectionController</a></code>.</p>"},"Protocols/IGSTListBindingSectionControllerSelectionDelegate.html":{"name":"IGListBindingSectionControllerSelectionDelegate","abstract":"<p>A protocol that handles cell selection events in an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/IGSTListBindingSectionController.html\">IGSTListBindingSectionController</a></code>.</p>"},"Protocols/IGSTListCollectionContext.html":{"name":"IGListCollectionContext","abstract":"<p>The collection context provides limited access to the collection-related information that"},"Protocols/IGSTListDiffable.html":{"name":"IGListDiffable","abstract":"<p>The <code>IGSTListDiffable</code> protocol provides methods needed to compare the identity and equality of two objects.</p>"},"Protocols/IGSTListDisplayDelegate.html":{"name":"IGListDisplayDelegate","abstract":"<p>Implement this protocol to receive display events for a section controller when it is on screen.</p>"},"Protocols/IGSTListScrollDelegate.html":{"name":"IGListScrollDelegate","abstract":"<p>Implement this protocol to receive display events for a section controller when it is on screen.</p>"},"Protocols/IGSTListSingleSectionControllerDelegate.html":{"name":"IGListSingleSectionControllerDelegate","abstract":"<p>A delegate that can receive selection events on an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/IGSTListSingleSectionController.html\">IGSTListSingleSectionController</a></code>.</p>"},"Protocols/IGSTListSupplementaryViewSource.html":{"name":"IGListSupplementaryViewSource","abstract":"<p>Conform to this protocol to provide information about a list&rsquo;s supplementary views. This data is used in"},"Protocols/IGSTListUpdatingDelegate.html":{"name":"IGListUpdatingDelegate","abstract":"<p>Implement this protocol in order to handle both section and row based update events. Implementation should forward or"},"Protocols/IGSTListWorkingRangeDelegate.html":{"name":"IGListWorkingRangeDelegate","abstract":"<p>Implement this protocol to receive working range events for a list.</p>"},"Enums/IGSTListExperiment.html#/c:@E@IGSTListExperiment@IGSTListExperimentNone":{"name":"IGListExperimentNone","abstract":"<p>Specifies no experiments.</p>","parent_name":"IGListExperiment"},"Enums/IGSTListExperiment.html#/c:@E@IGSTListExperiment@IGSTListExperimentBackgroundDiffing":{"name":"IGListExperimentBackgroundDiffing","abstract":"<p>Test updater diffing performed on a background queue.</p>","parent_name":"IGListExperiment"},"Enums/IGSTListExperiment.html#/c:@E@IGSTListExperiment@IGSTListExperimentReloadDataFallback":{"name":"IGListExperimentReloadDataFallback","abstract":"<p>Test fallback to reloadData when <q>too many</q> update operations.</p>","parent_name":"IGListExperiment"},"Enums/IGSTListDiffOption.html#/c:@E@IGSTListDiffOption@IGSTListDiffPointerPersonality":{"name":"IGListDiffPointerPersonality","abstract":"<p>Compare objects using pointer personality.</p>","parent_name":"IGListDiffOption"},"Enums/IGSTListDiffOption.html#/c:@E@IGSTListDiffOption@IGSTListDiffEquality":{"name":"IGListDiffEquality","abstract":"<p>Compare objects using <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/IGSTListDiffable.html#/c:objc(pl)IGSTListDiffable(im)isEqualToDiffableObject:\">-[IGSTListDiffable isEqualToDiffableObject:]</a></code>.</p>","parent_name":"IGListDiffOption"},"Enums/IGSTListDiffOption.html":{"name":"IGListDiffOption","abstract":"<p>An option for how to do comparisons between similar objects.</p>"},"Enums/IGSTListExperiment.html":{"name":"IGListExperiment","abstract":"<p>Bitmask-able options used for pre-release feature testing.</p>"},"Constants.html#/c:@IGListKitVersionNumber":{"name":"IGListKitVersionNumber","abstract":"<p>Project version number for IGListKit.</p>"},"Constants.html#/c:@IGListKitVersionString":{"name":"IGListKitVersionString","abstract":"<p>Project version string for IGListKit.</p>"},"Classes/IGSTListStackedSectionController.html#/c:objc(cs)IGSTListStackedSectionController(im)initWithSectionControllers:":{"name":"-initWithSectionControllers:","abstract":"<p>Creates a new stacked section controller.</p>","parent_name":"IGListStackedSectionController"},"Classes/IGSTListSingleSectionController.html#/c:objc(cs)IGSTListSingleSectionController(im)initWithCellClass:configureBlock:sizeBlock:":{"name":"-initWithCellClass:configureBlock:sizeBlock:","abstract":"<p>Creates a new section controller for a given cell type that will always have only one cell when present in a list.</p>","parent_name":"IGListSingleSectionController"},"Classes/IGSTListSingleSectionController.html#/c:objc(cs)IGSTListSingleSectionController(im)initWithNibName:bundle:configureBlock:sizeBlock:":{"name":"-initWithNibName:bundle:configureBlock:sizeBlock:","abstract":"<p>Creates a new section controller for a given nib name and bundle that will always have only one cell when present in a list.</p>","parent_name":"IGListSingleSectionController"},"Classes/IGSTListSingleSectionController.html#/c:objc(cs)IGSTListSingleSectionController(im)initWithStoryboardCellIdentifier:configureBlock:sizeBlock:":{"name":"-initWithStoryboardCellIdentifier:configureBlock:sizeBlock:","abstract":"<p>Creates a new section controller for a given storyboard cell identifier that will always have only one cell when present in a list.</p>","parent_name":"IGListSingleSectionController"},"Classes/IGSTListSingleSectionController.html#/c:objc(cs)IGSTListSingleSectionController(py)selectionDelegate":{"name":"selectionDelegate","abstract":"<p>An optional delegate that handles selection and deselection.</p>","parent_name":"IGListSingleSectionController"},"Classes/IGSTListSectionController.html#/c:objc(cs)IGSTListSectionController(im)numberOfItems":{"name":"-numberOfItems","abstract":"<p>Returns the number of items in the section.</p>","parent_name":"IGListSectionController"},"Classes/IGSTListSectionController.html#/c:objc(cs)IGSTListSectionController(im)sizeForItemAtIndex:":{"name":"-sizeForItemAtIndex:","abstract":"<p>The specific size for the item at the specified index.</p>","parent_name":"IGListSectionController"},"Classes/IGSTListSectionController.html#/c:objc(cs)IGSTListSectionController(im)cellForItemAtIndex:":{"name":"-cellForItemAtIndex:","abstract":"<p>Return a dequeued cell for a given index.</p>","parent_name":"IGListSectionController"},"Classes/IGSTListSectionController.html#/c:objc(cs)IGSTListSectionController(im)didUpdateToObject:":{"name":"-didUpdateToObject:","abstract":"<p>Updates the section controller to a new object.</p>","parent_name":"IGListSectionController"},"Classes/IGSTListSectionController.html#/c:objc(cs)IGSTListSectionController(im)didSelectItemAtIndex:":{"name":"-didSelectItemAtIndex:","abstract":"<p>Tells the section controller that the cell at the specified index path was selected.</p>","parent_name":"IGListSectionController"},"Classes/IGSTListSectionController.html#/c:objc(cs)IGSTListSectionController(im)didDeselectItemAtIndex:":{"name":"-didDeselectItemAtIndex:","abstract":"<p>Tells the section controller that the cell at the specified index path was deselected.</p>","parent_name":"IGListSectionController"},"Classes/IGSTListSectionController.html#/c:objc(cs)IGSTListSectionController(py)viewController":{"name":"viewController","abstract":"<p>The view controller housing the adapter that created this section controller.</p>","parent_name":"IGListSectionController"},"Classes/IGSTListSectionController.html#/c:objc(cs)IGSTListSectionController(py)collectionContext":{"name":"collectionContext","abstract":"<p>A context object for interacting with the collection. </p>","parent_name":"IGListSectionController"},"Classes/IGSTListSectionController.html#/c:objc(cs)IGSTListSectionController(py)section":{"name":"section","abstract":"<p>Returns the section within the list for this section controller.</p>","parent_name":"IGListSectionController"},"Classes/IGSTListSectionController.html#/c:objc(cs)IGSTListSectionController(py)isFirstSection":{"name":"isFirstSection","abstract":"<p>Returns <code>YES</code> if the section controller is the first section in the list, <code>NO</code> otherwise.</p>","parent_name":"IGListSectionController"},"Classes/IGSTListSectionController.html#/c:objc(cs)IGSTListSectionController(py)isLastSection":{"name":"isLastSection","abstract":"<p>Returns <code>YES</code> if the section controller is the last section in the list, <code>NO</code> otherwise.</p>","parent_name":"IGListSectionController"},"Classes/IGSTListSectionController.html#/c:objc(cs)IGSTListSectionController(py)inset":{"name":"inset","abstract":"<p>The margins used to lay out content in the section controller.</p>","parent_name":"IGListSectionController"},"Classes/IGSTListSectionController.html#/c:objc(cs)IGSTListSectionController(py)minimumLineSpacing":{"name":"minimumLineSpacing","abstract":"<p>The minimum spacing to use between rows of items.</p>","parent_name":"IGListSectionController"},"Classes/IGSTListSectionController.html#/c:objc(cs)IGSTListSectionController(py)minimumInteritemSpacing":{"name":"minimumInteritemSpacing","abstract":"<p>The minimum spacing to use between items in the same row.</p>","parent_name":"IGListSectionController"},"Classes/IGSTListSectionController.html#/c:objc(cs)IGSTListSectionController(py)supplementaryViewSource":{"name":"supplementaryViewSource","abstract":"<p>The supplementary view source for the section controller. Can be <code>nil</code>.</p>","parent_name":"IGListSectionController"},"Classes/IGSTListSectionController.html#/c:objc(cs)IGSTListSectionController(py)displayDelegate":{"name":"displayDelegate","abstract":"<p>An object that handles display events for the section controller. Can be <code>nil</code>.</p>","parent_name":"IGListSectionController"},"Classes/IGSTListSectionController.html#/c:objc(cs)IGSTListSectionController(py)workingRangeDelegate":{"name":"workingRangeDelegate","abstract":"<p>An object that handles working range events for the section controller. Can be <code>nil</code>.</p>","parent_name":"IGListSectionController"},"Classes/IGSTListSectionController.html#/c:objc(cs)IGSTListSectionController(py)scrollDelegate":{"name":"scrollDelegate","abstract":"<p>An object that handles scroll events for the section controller. Can be <code>nil</code>.</p>","parent_name":"IGListSectionController"},"Classes/IGSTListMoveIndexPath.html#/c:objc(cs)IGSTListMoveIndexPath(py)from":{"name":"from","abstract":"<p>An index path in the old collection.</p>","parent_name":"IGListMoveIndexPath"},"Classes/IGSTListMoveIndexPath.html#/c:objc(cs)IGSTListMoveIndexPath(py)to":{"name":"to","abstract":"<p>An index path in the new collection.</p>","parent_name":"IGListMoveIndexPath"},"Classes/IGSTListMoveIndex.html#/c:objc(cs)IGSTListMoveIndex(py)from":{"name":"from","abstract":"<p>An index in the old collection.</p>","parent_name":"IGListMoveIndex"},"Classes/IGSTListMoveIndex.html#/c:objc(cs)IGSTListMoveIndex(py)to":{"name":"to","abstract":"<p>An index in the new collection.</p>","parent_name":"IGListMoveIndex"},"Classes/IGSTListIndexSetResult.html#/c:objc(cs)IGSTListIndexSetResult(py)inserts":{"name":"inserts","abstract":"<p>The indexes inserted into the new collection.</p>","parent_name":"IGSTListIndexSetResult"},"Classes/IGSTListIndexSetResult.html#/c:objc(cs)IGSTListIndexSetResult(py)deletes":{"name":"deletes","abstract":"<p>The indexes deleted from the old collection.</p>","parent_name":"IGSTListIndexSetResult"},"Classes/IGSTListIndexSetResult.html#/c:objc(cs)IGSTListIndexSetResult(py)updates":{"name":"updates","abstract":"<p>The indexes in the old collection that need updated.</p>","parent_name":"IGSTListIndexSetResult"},"Classes/IGSTListIndexSetResult.html#/c:objc(cs)IGSTListIndexSetResult(py)moves":{"name":"moves","abstract":"<p>The moves from an index in the old collection to an index in the new collection.</p>","parent_name":"IGSTListIndexSetResult"},"Classes/IGSTListIndexSetResult.html#/c:objc(cs)IGSTListIndexSetResult(py)hasChanges":{"name":"hasChanges","abstract":"<p>A Read-only boolean that indicates whether the result has any changes or not.","parent_name":"IGSTListIndexSetResult"},"Classes/IGSTListIndexSetResult.html#/c:objc(cs)IGSTListIndexSetResult(im)oldIndexForIdentifier:":{"name":"-oldIndexForIdentifier:","abstract":"<p>Returns the index of the object with the specified identifier <em>before</em> the diff.</p>","parent_name":"IGSTListIndexSetResult"},"Classes/IGSTListIndexSetResult.html#/c:objc(cs)IGSTListIndexSetResult(im)newIndexForIdentifier:":{"name":"-newIndexForIdentifier:","abstract":"<p>Returns the index of the object with the specified identifier <em>after</em> the diff.</p>","parent_name":"IGSTListIndexSetResult"},"Classes/IGSTListIndexSetResult.html#/c:objc(cs)IGSTListIndexSetResult(im)resultForBatchUpdates":{"name":"-resultForBatchUpdates","abstract":"<p>Creates a new result object with operations safe for use in <code>UITableView</code> and <code>UICollectionView</code> batch updates.</p>","parent_name":"IGSTListIndexSetResult"},"Classes/IGSTListIndexPathResult.html#/c:objc(cs)IGSTListIndexPathResult(py)inserts":{"name":"inserts","abstract":"<p>The index paths inserted into the new collection.</p>","parent_name":"IGSTListIndexPathResult"},"Classes/IGSTListIndexPathResult.html#/c:objc(cs)IGSTListIndexPathResult(py)deletes":{"name":"deletes","abstract":"<p>The index paths deleted from the old collection.</p>","parent_name":"IGSTListIndexPathResult"},"Classes/IGSTListIndexPathResult.html#/c:objc(cs)IGSTListIndexPathResult(py)updates":{"name":"updates","abstract":"<p>The index paths in the old collection that need updated.</p>","parent_name":"IGSTListIndexPathResult"},"Classes/IGSTListIndexPathResult.html#/c:objc(cs)IGSTListIndexPathResult(py)moves":{"name":"moves","abstract":"<p>The moves from an index path in the old collection to an index path in the new collection.</p>","parent_name":"IGSTListIndexPathResult"},"Classes/IGSTListIndexPathResult.html#/c:objc(cs)IGSTListIndexPathResult(py)hasChanges":{"name":"hasChanges","abstract":"<p>A Read-only boolean that indicates whether the result has any changes or not.","parent_name":"IGSTListIndexPathResult"},"Classes/IGSTListIndexPathResult.html#/c:objc(cs)IGSTListIndexPathResult(im)oldIndexPathForIdentifier:":{"name":"-oldIndexPathForIdentifier:","abstract":"<p>Returns the index path of the object with the specified identifier <em>before</em> the diff.</p>","parent_name":"IGSTListIndexPathResult"},"Classes/IGSTListIndexPathResult.html#/c:objc(cs)IGSTListIndexPathResult(im)newIndexPathForIdentifier:":{"name":"-newIndexPathForIdentifier:","abstract":"<p>Returns the index path of the object with the specified identifier <em>after</em> the diff.</p>","parent_name":"IGSTListIndexPathResult"},"Classes/IGSTListIndexPathResult.html#/c:objc(cs)IGSTListIndexPathResult(im)resultForBatchUpdates":{"name":"-resultForBatchUpdates","abstract":"<p>Creates a new result object with operations safe for use in <code>UITableView</code> and <code>UICollectionView</code> batch updates.</p>","parent_name":"IGSTListIndexPathResult"},"Classes/IGSTListGenericSectionController.html#/c:objc(cs)IGSTListGenericSectionController(py)object":{"name":"object","abstract":"<p>The object mapped to this section controller. Matches the object provided in","parent_name":"IGListGenericSectionController"},"Classes/IGSTListGenericSectionController.html#/c:objc(cs)IGSTListGenericSectionController(im)didUpdateToObject:":{"name":"-didUpdateToObject:","abstract":"<p>Updates the section controller to a new object.</p>","parent_name":"IGListGenericSectionController"},"Classes/IGSTListCollectionViewLayout.html#/c:objc(cs)IGSTListCollectionViewLayout(py)scrollDirection":{"name":"scrollDirection","abstract":"<p>Direction in which layout will be scrollable; items will be flowed in the perpendicular direction, <q>newlining</q> when they","parent_name":"IGListCollectionViewLayout"},"Classes/IGSTListCollectionViewLayout.html#/c:objc(cs)IGSTListCollectionViewLayout(py)stickyHeaderYOffset":{"name":"stickyHeaderYOffset","abstract":"<p>Set this to adjust the offset of the sticky headers in the scrolling direction. Can be used to change the sticky","parent_name":"IGListCollectionViewLayout"},"Classes/IGSTListCollectionViewLayout.html#/c:objc(cs)IGSTListCollectionViewLayout(im)initWithStickyHeaders:scrollDirection:topContentInset:stretchToEdge:":{"name":"-initWithStickyHeaders:scrollDirection:topContentInset:stretchToEdge:","abstract":"<p>Create and return a new collection view layout.</p>","parent_name":"IGListCollectionViewLayout"},"Classes/IGSTListCollectionViewLayout.html#/c:objc(cs)IGSTListCollectionViewLayout(im)initWithStickyHeaders:topContentInset:stretchToEdge:":{"name":"-initWithStickyHeaders:topContentInset:stretchToEdge:","abstract":"<p>Create and return a new vertically scrolling collection view layout.</p>","parent_name":"IGListCollectionViewLayout"},"Classes/IGSTListBindingSectionController.html#/c:objc(cs)IGSTListBindingSectionController(py)dataSource":{"name":"dataSource","abstract":"<p>A data source that transforms a top-level object into view models, and returns cells and sizes for given view models.</p>","parent_name":"IGListBindingSectionController"},"Classes/IGSTListBindingSectionController.html#/c:objc(cs)IGSTListBindingSectionController(py)selectionDelegate":{"name":"selectionDelegate","abstract":"<p>A delegate that receives selection events from cells in an <code>IGSTListBindingSectionController</code> instance.</p>","parent_name":"IGListBindingSectionController"},"Classes/IGSTListBindingSectionController.html#/c:objc(cs)IGSTListBindingSectionController(py)object":{"name":"object","abstract":"<p>The object currently assigned to the section controller, if any.</p>","parent_name":"IGListBindingSectionController"},"Classes/IGSTListBindingSectionController.html#/c:objc(cs)IGSTListBindingSectionController(py)viewModels":{"name":"viewModels","abstract":"<p>The array of view models created from the data source. Values are changed when the top-level object changes or by","parent_name":"IGListBindingSectionController"},"Classes/IGSTListBindingSectionController.html#/c:objc(cs)IGSTListBindingSectionController(im)updateAnimated:completion:":{"name":"-updateAnimated:completion:","abstract":"<p>Tells the section controller to query for new view models, diff the changes, and update its cells.</p>","parent_name":"IGListBindingSectionController"},"Classes/IGSTListBatchUpdateData.html#/c:objc(cs)IGSTListBatchUpdateData(py)insertSections":{"name":"insertSections","abstract":"<p>Section insert indexes.</p>","parent_name":"IGListBatchUpdateData"},"Classes/IGSTListBatchUpdateData.html#/c:objc(cs)IGSTListBatchUpdateData(py)deleteSections":{"name":"deleteSections","abstract":"<p>Section delete indexes.</p>","parent_name":"IGListBatchUpdateData"},"Classes/IGSTListBatchUpdateData.html#/c:objc(cs)IGSTListBatchUpdateData(py)moveSections":{"name":"moveSections","abstract":"<p>Section moves.</p>","parent_name":"IGListBatchUpdateData"},"Classes/IGSTListBatchUpdateData.html#/c:objc(cs)IGSTListBatchUpdateData(py)insertIndexPaths":{"name":"insertIndexPaths","abstract":"<p>Item insert index paths.</p>","parent_name":"IGListBatchUpdateData"},"Classes/IGSTListBatchUpdateData.html#/c:objc(cs)IGSTListBatchUpdateData(py)deleteIndexPaths":{"name":"deleteIndexPaths","abstract":"<p>Item delete index paths.</p>","parent_name":"IGListBatchUpdateData"},"Classes/IGSTListBatchUpdateData.html#/c:objc(cs)IGSTListBatchUpdateData(py)moveIndexPaths":{"name":"moveIndexPaths","abstract":"<p>Item moves.</p>","parent_name":"IGListBatchUpdateData"},"Classes/IGSTListBatchUpdateData.html#/c:objc(cs)IGSTListBatchUpdateData(im)initWithInsertSections:deleteSections:moveSections:insertIndexPaths:deleteIndexPaths:moveIndexPaths:":{"name":"-initWithInsertSections:deleteSections:moveSections:insertIndexPaths:deleteIndexPaths:moveIndexPaths:","abstract":"<p>Creates a new batch update object with section and item operations.</p>","parent_name":"IGListBatchUpdateData"},"Classes/IGSTListAdapterUpdater.html#/c:objc(cs)IGSTListAdapterUpdater(py)delegate":{"name":"delegate","abstract":"<p>The delegate that receives events with data on the performance of a transition.</p>","parent_name":"IGListAdapterUpdater"},"Classes/IGSTListAdapterUpdater.html#/c:objc(cs)IGSTListAdapterUpdater(py)movesAsDeletesInserts":{"name":"movesAsDeletesInserts","abstract":"<p>A flag indicating if a move should be treated as a <q>delete, then insert</q> operation.</p>","parent_name":"IGListAdapterUpdater"},"Classes/IGSTListAdapterUpdater.html#/c:objc(cs)IGSTListAdapterUpdater(py)allowsBackgroundReloading":{"name":"allowsBackgroundReloading","abstract":"<p>A flag indicating whether this updater should skip diffing and simply call","parent_name":"IGListAdapterUpdater"},"Classes/IGSTListAdapterUpdater.html#/c:objc(cs)IGSTListAdapterUpdater(py)experiments":{"name":"experiments","abstract":"<p>A bitmask of experiments to conduct on the updater.</p>","parent_name":"IGListAdapterUpdater"},"Classes/IGSTListAdapter.html#/c:objc(cs)IGSTListAdapter(py)viewController":{"name":"viewController","abstract":"<p>The view controller that houses the adapter.</p>","parent_name":"IGListAdapter"},"Classes/IGSTListAdapter.html#/c:objc(cs)IGSTListAdapter(py)collectionView":{"name":"collectionView","abstract":"<p>The collection view used with the adapter.</p>","parent_name":"IGListAdapter"},"Classes/IGSTListAdapter.html#/c:objc(cs)IGSTListAdapter(py)dataSource":{"name":"dataSource","abstract":"<p>The object that acts as the data source for the adapter.</p>","parent_name":"IGListAdapter"},"Classes/IGSTListAdapter.html#/c:objc(cs)IGSTListAdapter(py)delegate":{"name":"delegate","abstract":"<p>The object that receives top-level events for section controllers.</p>","parent_name":"IGListAdapter"},"Classes/IGSTListAdapter.html#/c:objc(cs)IGSTListAdapter(py)collectionViewDelegate":{"name":"collectionViewDelegate","abstract":"<p>The object that receives <code>UICollectionViewDelegate</code> events.</p>","parent_name":"IGListAdapter"},"Classes/IGSTListAdapter.html#/c:objc(cs)IGSTListAdapter(py)scrollViewDelegate":{"name":"scrollViewDelegate","abstract":"<p>The object that receives <code>UIScrollViewDelegate</code> events.</p>","parent_name":"IGListAdapter"},"Classes/IGSTListAdapter.html#/c:objc(cs)IGSTListAdapter(py)updater":{"name":"updater","abstract":"<p>The updater for the adapter.</p>","parent_name":"IGListAdapter"},"Classes/IGSTListAdapter.html#/c:objc(cs)IGSTListAdapter(py)experiments":{"name":"experiments","abstract":"<p>A bitmask of experiments to conduct on the adapter.</p>","parent_name":"IGListAdapter"},"Classes/IGSTListAdapter.html#/c:objc(cs)IGSTListAdapter(im)initWithUpdater:viewController:workingRangeSize:":{"name":"-initWithUpdater:viewController:workingRangeSize:","abstract":"<p>Initializes a new <code>IGSTListAdapter</code> object.</p>","parent_name":"IGListAdapter"},"Classes/IGSTListAdapter.html#/c:objc(cs)IGSTListAdapter(im)initWithUpdater:viewController:":{"name":"-initWithUpdater:viewController:","abstract":"<p>Initializes a new <code>IGSTListAdapter</code> object with a working range of <code>0</code>.</p>","parent_name":"IGListAdapter"},"Classes/IGSTListAdapter.html#/c:objc(cs)IGSTListAdapter(im)performUpdatesAnimated:completion:":{"name":"-performUpdatesAnimated:completion:","abstract":"<p>Perform an update from the previous state of the data source. This is analogous to calling","parent_name":"IGListAdapter"},"Classes/IGSTListAdapter.html#/c:objc(cs)IGSTListAdapter(im)reloadDataWithCompletion:":{"name":"-reloadDataWithCompletion:","abstract":"<p>Perform an immediate reload of the data in the data source, discarding the old objects.</p>","parent_name":"IGListAdapter"},"Classes/IGSTListAdapter.html#/c:objc(cs)IGSTListAdapter(im)reloadObjects:":{"name":"-reloadObjects:","abstract":"<p>Reload the list for only the specified objects.</p>","parent_name":"IGListAdapter"},"Classes/IGSTListAdapter.html#/c:objc(cs)IGSTListAdapter(im)sectionControllerForSection:":{"name":"-sectionControllerForSection:","abstract":"<p>Query the section controller at a given section index. Constant time lookup.</p>","parent_name":"IGListAdapter"},"Classes/IGSTListAdapter.html#/c:objc(cs)IGSTListAdapter(im)sectionForSectionController:":{"name":"-sectionForSectionController:","abstract":"<p>Query the section index of a list. Constant time lookup.</p>","parent_name":"IGListAdapter"},"Classes/IGSTListAdapter.html#/c:objc(cs)IGSTListAdapter(im)sectionControllerForObject:":{"name":"-sectionControllerForObject:","abstract":"<p>Returns the section controller for the specified object. Constant time lookup.</p>","parent_name":"IGListAdapter"},"Classes/IGSTListAdapter.html#/c:objc(cs)IGSTListAdapter(im)objectForSectionController:":{"name":"-objectForSectionController:","abstract":"<p>Returns the object corresponding to the specified section controller in the list. Constant time lookup.</p>","parent_name":"IGListAdapter"},"Classes/IGSTListAdapter.html#/c:objc(cs)IGSTListAdapter(im)objectAtSection:":{"name":"-objectAtSection:","abstract":"<p>Returns the object corresponding to a section in the list. Constant time lookup.</p>","parent_name":"IGListAdapter"},"Classes/IGSTListAdapter.html#/c:objc(cs)IGSTListAdapter(im)sectionForObject:":{"name":"-sectionForObject:","abstract":"<p>Returns the section corresponding to the specified object in the list. Constant time lookup.</p>","parent_name":"IGListAdapter"},"Classes/IGSTListAdapter.html#/c:objc(cs)IGSTListAdapter(im)objects":{"name":"-objects","abstract":"<p>Returns a copy of all the objects currently driving the adapter.</p>","parent_name":"IGListAdapter"},"Classes/IGSTListAdapter.html#/c:objc(cs)IGSTListAdapter(im)visibleSectionControllers":{"name":"-visibleSectionControllers","abstract":"<p>An unordered array of the currently visible section controllers.</p>","parent_name":"IGListAdapter"},"Classes/IGSTListAdapter.html#/c:objc(cs)IGSTListAdapter(im)visibleObjects":{"name":"-visibleObjects","abstract":"<p>An unordered array of the currently visible objects.</p>","parent_name":"IGListAdapter"},"Classes/IGSTListAdapter.html#/c:objc(cs)IGSTListAdapter(im)visibleCellsForObject:":{"name":"-visibleCellsForObject:","abstract":"<p>An unordered array of the currently visible cells for a given object.</p>","parent_name":"IGListAdapter"},"Classes/IGSTListAdapter.html#/c:objc(cs)IGSTListAdapter(im)scrollToObject:supplementaryKinds:scrollDirection:scrollPosition:animated:":{"name":"-scrollToObject:supplementaryKinds:scrollDirection:scrollPosition:animated:","abstract":"<p>Scrolls to the specified object in the list adapter.</p>","parent_name":"IGListAdapter"},"Classes/IGSTListAdapter.html#/c:objc(cs)IGSTListAdapter(im)sizeForItemAtIndexPath:":{"name":"-sizeForItemAtIndexPath:","abstract":"<p>Returns the size of a cell at the specified index path.</p>","parent_name":"IGListAdapter"},"Classes/IGSTListAdapter.html#/c:objc(cs)IGSTListAdapter(im)sizeForSupplementaryViewOfKind:atIndexPath:":{"name":"-sizeForSupplementaryViewOfKind:atIndexPath:","abstract":"<p>Returns the size of a supplementary view in the list at the specified index path.</p>","parent_name":"IGListAdapter"},"Classes/IGSTListAdapter.html":{"name":"IGListAdapter","abstract":"<p><code>IGSTListAdapter</code> objects provide an abstraction for feeds of objects in a <code>UICollectionView</code> by breaking each object"},"Classes/IGSTListAdapterUpdater.html":{"name":"IGListAdapterUpdater","abstract":"<p>An <code>IGSTListAdapterUpdater</code> is a concrete type that conforms to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/IGSTListUpdatingDelegate.html\">IGSTListUpdatingDelegate</a></code>."},"Classes/IGSTListBatchUpdateData.html":{"name":"IGListBatchUpdateData","abstract":"<p>An instance of <code>IGSTListBatchUpdateData</code> takes section indexes and item index paths"},"Classes/IGSTListBindingSectionController.html":{"name":"IGListBindingSectionController","abstract":"<p>This section controller uses a data source to transform its <q>top level</q> object into an array of diffable view models."},"Classes/IGSTListCollectionViewLayout.html":{"name":"IGListCollectionViewLayout","abstract":"<p>This UICollectionViewLayout subclass is for vertically or horizontally scrolling lists of data with variable widths and"},"Classes/IGSTListGenericSectionController.html":{"name":"IGListGenericSectionController","abstract":"<p>This class adds a helper layer to <code>IGSTListSectionController\u0010</code> to automatically store a generic object in"},"Classes/IGSTListIndexPathResult.html":{"name":"IGSTListIndexPathResult","abstract":"<p>A result object returned when diffing with sections.</p>"},"Classes/IGSTListIndexSetResult.html":{"name":"IGSTListIndexSetResult","abstract":"<p>A result object returned when diffing with indexes.</p>"},"Classes/IGSTListMoveIndex.html":{"name":"IGListMoveIndex","abstract":"<p>An object representing a move between indexes.</p>"},"Classes/IGSTListMoveIndexPath.html":{"name":"IGListMoveIndexPath","abstract":"<p>An object representing a move between indexes.</p>"},"Classes.html#/c:objc(cs)IGSTListReloadDataUpdater":{"name":"IGListReloadDataUpdater","abstract":"<p>An <code>IGSTListReloadDataUpdater</code> is a concrete type that conforms to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/IGSTListUpdatingDelegate.html\">IGSTListUpdatingDelegate</a></code>."},"Classes/IGSTListSectionController.html":{"name":"IGListSectionController","abstract":"<p>The base class for section controllers used in a list. This class is intended to be subclassed.</p>"},"Classes/IGSTListSingleSectionController.html":{"name":"IGListSingleSectionController","abstract":"<p>This section controller is meant to make building simple, single-cell lists easier. By providing the type of cell, a block"},"Classes/IGSTListStackedSectionController.html":{"name":"IGListStackedSectionController","abstract":"<p>An instance of <code>IGSTListStackedSectionController</code> is a clustered section controller, composed of many child section"},"best-practices-and-faq.html":{"name":"Best Practices and FAQ"},"getting-started.html":{"name":"Getting Started"},"iglistdiffable-and-equality.html":{"name":"IGListDiffable and Equality"},"installation.html":{"name":"Installation"},"migration.html":{"name":"Migration"},"modeling-and-binding.html":{"name":"Modeling and Binding"},"vision.html":{"name":"VISION"},"working-with-core-data.html":{"name":"Working with Core Data"},"working-with-uicollectionview.html":{"name":"Working with UICollectionView"},"Guides.html":{"name":"Guides","abstract":"<p>The following guides are available globally.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Constants.html":{"name":"Constants","abstract":"<p>The following constants are available globally.</p>"},"Enums.html":{"name":"Enums","abstract":"<p>The following enums are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Type Definitions.html":{"name":"Type Definitions","abstract":"<p>The following type definitions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"}}
